"use strict";

require("core-js/modules/es6.object.assign");

require("core-js/modules/web.dom.iterable");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _required_props = require("../../test/required_props");

var _icon = require("./icon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

describe('EuiIcon', function () {
  test('is rendered', function () {
    var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, _extends({
      type: "search"
    }, _required_props.requiredProps)));
    expect(component).toMatchSnapshot();
  });
  describe('props', function () {
    describe('other props', function () {
      test('are passed through to the icon', function () {
        var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
          type: "search",
          "aria-label": "a custom title"
        }));
        expect(component).toMatchSnapshot();
      });
    });
    describe('size', function () {
      _icon.SIZES.forEach(function (size) {
        test("".concat(size, " is rendered"), function () {
          var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
            type: "search",
            size: size
          }));
          expect(component).toMatchSnapshot();
        });
      });
    });
    describe('type', function () {
      _icon.TYPES.forEach(function (type) {
        test("".concat(type, " is rendered"), function () {
          var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
            type: type
          }));
          expect(component).toMatchSnapshot();
        });
      });
    });
    describe('color', function () {
      _icon.COLORS.concat(['#fde', '#885522', 'rgb(100, 150, 200)', 'hsla(270, 60%, 70%, 0.9)']).forEach(function (color) {
        test("".concat(color, " is rendered"), function () {
          var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
            color: color
          }));
          expect(component).toMatchSnapshot();
        });
      });
    });
    describe('tabIndex', function () {
      test('renders focusable="false" when not provided', function () {
        var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
          type: "search"
        }));
        expect(component).toMatchSnapshot();
      });
      test('renders focusable="false" when -1', function () {
        var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
          type: "search",
          tabIndex: -1
        }));
        expect(component).toMatchSnapshot();
      });
      test('renders focusable="true" when 0', function () {
        var component = (0, _enzyme.render)(_react.default.createElement(_icon.EuiIcon, {
          type: "search",
          tabIndex: 0
        }));
        expect(component).toMatchSnapshot();
      });
    });
  });
});