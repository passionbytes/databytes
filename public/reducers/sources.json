[
  {
    "deprecated": false,
    "name": "Text File",
    "description": "Use this source to upload files containing data records and store that data in ES. Files can be a variety of delimited formats like CSVs or TSVs.",
    "parameters": [
      {
        "group": "fileInformation",
        "description": "Select the file you would like to upload.",
        "type": "file",
        "name": "file",
        "label": "File to Upload"
      },
      {
        "group": "fileInformation",
        "description": "Managing ES Mappings can be difficult. Use this toggle to force all values to be saved as strings. You can always use the reindex api later to change the mapping types.",
        "type": "boolean",
        "name": "forceStrings",
        "label": "Force all Values to Strings"
      },
      {
        "group": "indexInformation",
        "description": "Set this to true if you would like to delete all of the data for this source before loading new data. Setting this to true allows a 'truncate before load' leaving it false allows incremental loading.",
        "type": "boolean",
        "name": "truncate",
        "label": "Overwrite on Future Uploads"
      },
      {
        "group": "indexInformation",
        "description": "Set a field here to be used for the id of the record. Setting this allows for incremental loading and updating of existing records with the same ID.",
        "type": "text",
        "name": "uniqueField",
        "label": "Unique Field for Incremental Loading and Deduplication"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-41\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nmsg.payload = parameters\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 710, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 120, \\\"x\\\": 930, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update'\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 130, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 130, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"[{\\\\\\\"name\\\\\\\": \\\\\\\"file\\\\\\\"}]\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"], [\\\"{{_id}}-45\\\", \\\"{{_id}}-20\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.req.files && msg.req.files.file) {\\\\n    msg.payload = 'Attempting to parse file, see Node-RED logs for status.'\\\\n    \\\\n    return [null, msg]\\\\n} else {\\\\n    var body = msg.payload;\\\\n\\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {\\\\n        path: '/{{_index}}/default/',\\\\n        method: 'PUT'\\\\n    }\\\\n    \\\\n    if (msg.payload instanceof Array) {\\\\n        var messages = [];\\\\n        \\\\n        msg.payload.forEach(function(data) {\\\\n            msg.payload.payload = data;\\\\n            \\\\n            messages.push(msg)\\\\n        })\\\\n        \\\\n        return [messages, null];\\\\n    } else {\\\\n        msg.payload.payload = body\\\\n        \\\\n        return [msg, null];\\\\n    }\\\\n}\\\", \\\"y\\\": 600, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-47\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 880, \\\"x\\\": 290, \\\"arraySplt\\\": \\\"1\\\", \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-2\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\", \\\"{{_id}}-41\\\"]], \\\"name\\\": \\\"HTTP Response\\\", \\\"links\\\": [\\\"{{_id}}-35\\\", \\\"{{_id}}-39\\\", \\\"{{_id}}-40\\\", \\\"{{_id}}-42\\\", \\\"{{_id}}-43\\\", \\\"{{_id}}-44\\\", \\\"11194e58.7f22d2\\\"], \\\"y\\\": 120, \\\"x\\\": 835, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Try to parse file\\\", \\\"y\\\": 840, \\\"x\\\": 140, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-5\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-48\\\"]], \\\"name\\\": \\\"File In\\\", \\\"links\\\": [\\\"{{_id}}-20\\\"], \\\"y\\\": 740, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload) {\\\\n    var operation = {\\\\n        \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n        \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\"\\\\n    }\\\\n    \\\\n    var data = msg.payload\\\\n        \\\\n    var uniqueField = flow.get('uniqueField');\\\\n    var forceStrings = flow.get('forceStrings');\\\\n    \\\\n    \\\\n    for (var k in data) {\\\\n        if (forceStrings) {\\\\n            data[k] = String(data[k])\\\\n        }\\\\n        \\\\n        newK = k.replace(/\\\\\\\\./g,'_')\\\\n        \\\\n        if (newK != k) {\\\\n            data[newK] = data[k]\\\\n            delete data[k]\\\\n        }\\\\n    }\\\\n    \\\\n    if (uniqueField && uniqueField !== '' && msg.payload[uniqueField]) {\\\\n        operation['_id'] = msg.payload[uniqueField]\\\\n    }\\\\n    \\\\n    var newMsg1 = {};\\\\n    newMsg1.payload = JSON.stringify({index: operation})\\\\n    msg.payload = JSON.stringify(data)\\\\n    \\\\n    return [[newMsg1,msg]];\\\\n} else if (msg.control && msg.control.state == 'end') {\\\\n    msg.complete = true;\\\\n    return msg\\\\n}\\\", \\\"y\\\": 980, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-10\\\"}, {\\\"count\\\": \\\"10000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 980, \\\"wires\\\": [[\\\"{{_id}}-12\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": false, \\\"x\\\": 290, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-11\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-13\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload += \\\\\\\"\\\\\\\\n\\\\\\\"\\\\n\\\\nvar insertData = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST'\\\\n\\\\nmsg.payload = {\\\\n    path: '/_bulk',\\\\n    method: 'POST',\\\\n    payload: insertData\\\\n}\\\\n\\\\n\\\\ndelete msg.headers\\\\nreturn msg;\\\", \\\"y\\\": 980, \\\"x\\\": 410, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-12\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-50\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-13\\\", \\\"y\\\": 980, \\\"x\\\": 550, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Truncate Existing Data\\\", \\\"y\\\": 700, \\\"x\\\": 160, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-14\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-16\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST';\\\\n\\\\nmsg.payload = {\\\\n    path: '/{{_index}}',\\\\n    method: 'HEAD'\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 740, \\\"x\\\": 450, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-15\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-16\\\", \\\"y\\\": 740, \\\"x\\\": 590, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-18\\\"], [\\\"{{_id}}-37\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"delete msg.method;\\\\ndelete msg.headers;\\\\ndelete msg.req;\\\\n\\\\nif (msg.statusCode == 200) {\\\\n    msg.url = global.get('node-red').url + '/elasticsearch'\\\\n    msg.method = 'POST'\\\\n    \\\\n    msg.payload = {\\\\n        path: '/{{_index}}/_delete_by_query',\\\\n        method: 'POST',\\\\n        payload: {\\\\n            \\\\\\\"query\\\\\\\": {\\\\n                \\\\\\\"match_all\\\\\\\": {}\\\\n            }\\\\n        }\\\\n    }\\\\n    \\\\n    return [msg, null];\\\\n} else {\\\\n    // Likely index doesn't exist so we just continue like it's gone.\\\\n    msg.statusCode = 200;\\\\n    \\\\n    return [null, msg]    \\\\n}\\\", \\\"y\\\": 740, \\\"x\\\": 730, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-18\\\", \\\"y\\\": 740, \\\"x\\\": 890, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"false\\\", \\\"wires\\\": [[\\\"{{_id}}-15\\\"], [\\\"{{_id}}-36\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"str\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"true\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"flow\\\", \\\"y\\\": 740, \\\"x\\\": 310, \\\"property\\\": \\\"truncate\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-19\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"File Out\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 680, \\\"x\\\": 455, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-20\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Switch out\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 740, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-30\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-49\\\"]], \\\"name\\\": \\\"Switch In\\\", \\\"links\\\": [\\\"{{_id}}-30\\\", \\\"{{_id}}-37\\\", \\\"{{_id}}-36\\\"], \\\"y\\\": 880, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-31\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-10\\\"]], \\\"name\\\": \\\"Load Data\\\", \\\"links\\\": [\\\"{{_id}}-33\\\"], \\\"y\\\": 980, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-32\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Truncated\\\", \\\"links\\\": [\\\"{{_id}}-32\\\"], \\\"y\\\": 880, \\\"x\\\": 695, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-33\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-34\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Do Not Truncate\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 780, \\\"x\\\": 415, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-36\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Index Does Not Exist\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 780, \\\"x\\\": 835, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-37\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Format Data\\\", \\\"y\\\": 940, \\\"x\\\": 130, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-38\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"true\\\", \\\"y\\\": 80, \\\"active\\\": true, \\\"x\\\": 930, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-41\\\", \\\"name\\\": \\\"\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 520, \\\"x\\\": 815, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-43\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 260, \\\"x\\\": 815, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-44\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 640, \\\"x\\\": 455, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-45\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-33\\\"], [\\\"{{_id}}-33\\\"]], \\\"name\\\": \\\"\\\", \\\"filename\\\": \\\"\\\", \\\"y\\\": 880, \\\"x\\\": 580, \\\"type\\\": \\\"bigcsv\\\", \\\"id\\\": \\\"{{_id}}-46\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-46\\\"]], \\\"name\\\": \\\"Configure\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var newMsg = {}\\\\n\\\\nnewMsg.filename = msg.payload.path\\\\nnewMsg.config = {\\\\n    auto_parse: true,\\\\n    auto_parse_date: true\\\\n}\\\\nreturn newMsg;\\\", \\\"y\\\": 880, \\\"x\\\": 440, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-47\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-19\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.req.files && msg.req.files.file) {\\\\n    msg.files = msg.req.files.file\\\\n    return msg\\\\n} else {\\\\n    node.error('No file found in payload.');\\\\n}\\\", \\\"y\\\": 740, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-48\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-2\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = msg.files\\\\nreturn msg\\\", \\\"y\\\": 880, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-49\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"false\\\", \\\"y\\\": 980, \\\"active\\\": true, \\\"x\\\": 710, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-50\\\", \\\"name\\\": \\\"\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Upload your file. For now this source does not allow specifying custom delimeters, but it is possible if needed. Also the source expects the file to have the first row as the column titles.",
        "key": "fileInformation",
        "title": "Information about the file"
      },
      {
        "description": "You can use the options below to configure whether the data should be cleared upon further uploads or if the new data should be merged with the old. Merging while using a unique field allows for incremental loading.",
        "key": "indexInformation",
        "title": "Data Storage Options"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "c3BWuWIBSxgT_jLO2Svl"
  },
  {
    "deprecated": false,
    "name": "Source Template",
    "description": "This source has two main purposes: the first is to enable easier development of additional flows, it can also be used to develop a custom channel.",
    "parameters": [
      {
        "group": "examples",
        "name": "bool1",
        "value": "true",
        "label": "Default true",
        "type": "boolean",
        "description": "Managing ES Mappings can be difficult. Use this toggle to force all values to be saved as strings. You can always use the reindex api later to change the mapping types."
      },
      {
        "group": "examples",
        "name": "bool2",
        "value": "false",
        "label": "Default false",
        "type": "boolean",
        "description": "Default false"
      },
      {
        "group": "examples",
        "description": "Text with placeholder.",
        "type": "text",
        "label": "Text with placeholder",
        "placeholder": "placeholder text",
        "name": "text1"
      },
      {
        "group": "examples",
        "name": "text2",
        "value": "default value",
        "label": "Text with default value.",
        "type": "text",
        "description": "Text with default value."
      },
      {
        "type": "text",
        "group": "examples",
        "description": "<div>This should be unique<ul><li>test1</li><li>test2</li></ul></div>",
        "name": "text3",
        "label": "Text with HTML description (not working)"
      },
      {
        "group": "examples",
        "description": "Password",
        "required": true,
        "label": "Password",
        "type": "password",
        "name": "password"
      },
      {
        "group": "examples",
        "description": "Number",
        "required": true,
        "validation": {
          "rule": "^.{6,}$",
          "message": "The number should be at least 6 digits"
        },
        "label": "Select a number",
        "type": "number",
        "name": "number",
        "value": "1"
      },
      {
        "group": "lists",
        "description": "description:singleList",
        "placeholder": "List of options",
        "required": true,
        "label": "Single selection list",
        "type": "list-single",
        "options": [
          {
            "value": 1,
            "label": "First"
          },
          {
            "value": 2,
            "label": "Second"
          },
          {
            "value": 4,
            "label": "Forth"
          }
        ],
        "name": "singleList",
        "value": [
          1
        ]
      },
      {
        "group": "lists.sub",
        "description": "description:multiList",
        "placeholder": "List of options",
        "required": true,
        "label": "Multiple selection list",
        "type": "list-multiple",
        "options": [
          {
            "value": 1,
            "label": "First"
          },
          {
            "value": 2,
            "label": "Second"
          },
          {
            "value": 4,
            "label": "Forth"
          }
        ],
        "name": "multiList",
        "value": [
          1,
          2
        ]
      },
      {
        "group": "examples",
        "description": "Code example",
        "required": true,
        "label": "Code",
        "type": "code",
        "name": "code",
        "value": "const test = 'test';"
      },
      {
        "group": "examples",
        "description": "Select the file you would like to upload.",
        "type": "file",
        "name": "file",
        "label": "File to Upload",
        "required": true
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 810, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Examples",
        "key": "examples",
        "title": "Examples"
      },
      {
        "description": "List examples",
        "key": "lists",
        "title": "Lists"
      },
      {
        "description": "List Sub group",
        "key": "lists.sub",
        "title": "Lists sub-group"
      }
    ],
    "hasDashboards": true,
    "hasAlerts": true,
    "hasLearning": true,
    "id": "PPM1HGMBvIUPJ7a7F4Um"
  },
  {
    "deprecated": false,
    "name": "Docker Hub Statistics",
    "description": "Use this source to pull statistics from a Docker Hub Organization or User like stars and pulls. Just provide the organization or user and click create.",
    "parameters": [
      {
        "group": "repoInformation",
        "description": "This can be either an organization or user name.",
        "required": true,
        "label": "Org or User Name",
        "type": "text",
        "name": "dockername"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_name}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-68\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, JSON.parse(param.value))\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 730, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_name}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-1\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-5\\\", \\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-68\\\"], \\\"y\\\": 700, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-2\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-3\\\", \\\"y\\\": 800, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var name = flow.get('dockername');\\\\n \\\\nmsg.url = 'https://hub.docker.com/v2/repositories/' + name\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 800, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"\\\", \\\"schedule\\\": \\\"every 1 hour\\\", \\\"y\\\": 720, \\\"x\\\": 170, \\\"type\\\": \\\"later\\\", \\\"id\\\": \\\"{{_id}}-5\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Timer Out\\\", \\\"links\\\": [\\\"{{_id}}-7\\\", \\\"{{_id}}-12\\\", \\\"{{_id}}-34\\\", \\\"{{_id}}-43\\\", \\\"{{_id}}-52\\\", \\\"{{_id}}-61\\\"], \\\"y\\\": 700, \\\"x\\\": 275, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 840, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-7\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-8\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"y\\\": 800, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Update Stars\\\", \\\"y\\\": 760, \\\"x\\\": 130, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-9\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-17\\\"], [\\\"{{_id}}-16\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    if (msg.payload.next) {\\\\n        msg.url = msg.payload.next\\\\n        msg.payload = msg.payload.results\\\\n        \\\\n        return [msg, msg]\\\\n    } else {\\\\n        msg.payload = msg.payload.results\\\\n        \\\\n        return [msg, null]\\\\n    }\\\\n}\\\", \\\"y\\\": 800, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 840, \\\"x\\\": 400, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-16\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-18\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 800, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-17\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-22\\\"]], \\\"name\\\": \\\"\\\", \\\"y\\\": 800, \\\"x\\\": 790, \\\"type\\\": \\\"flat\\\", \\\"id\\\": \\\"{{_id}}-18\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"false\\\", \\\"y\\\": 900, \\\"active\\\": true, \\\"x\\\": 910, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-19\\\", \\\"name\\\": \\\"\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 800, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-23\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-20\\\", \\\"{{_id}}-30\\\", \\\"{{_id}}-40\\\", \\\"{{_id}}-49\\\", \\\"{{_id}}-58\\\", \\\"{{_id}}-67\\\"], \\\"y\\\": 900, \\\"x\\\": 395, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-21\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-20\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\ndata.pull_date = new Date();\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\"\\\\n}\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 800, \\\"x\\\": 910, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-22\\\"}, {\\\"count\\\": \\\"1000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 900, \\\"wires\\\": [[\\\"{{_id}}-24\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": false, \\\"x\\\": 490, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-23\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-25\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload += \\\\\\\"\\\\\\\\n\\\\\\\"\\\\n\\\\nvar insertData = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST'\\\\n\\\\nmsg.payload = {\\\\n    path: '/_bulk',\\\\n    method: 'POST',\\\\n    payload: insertData\\\\n}\\\\n\\\\n\\\\ndelete msg.headers\\\\nreturn msg;\\\", \\\"y\\\": 900, \\\"x\\\": 610, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-24\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-25\\\", \\\"y\\\": 900, \\\"x\\\": 750, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Init Out\\\", \\\"links\\\": [\\\"b9f24f0a.fdec7\\\"], \\\"y\\\": 80, \\\"x\\\": 835, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-68\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Provide a Docker Hub username or organiztion.",
        "key": "repoInformation",
        "title": "Docker Hub Information"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "A_MtHGMBvIUPJ7a7YIWt"
  },
  {
    "deprecated": false,
    "name": "Twitter Streaming",
    "description": "Use this source to pull tweets into Elasticsearch. You can stream specific user's tweets or search topics.",
    "parameters": [
      {
        "group": "connectionInformation",
        "description": "The Consumer Key from the Twitter dev portal.",
        "required": true,
        "label": "Consumer Key",
        "type": "text",
        "name": "consumerKey"
      },
      {
        "group": "connectionInformation",
        "description": "The Consumer Secret from the Twitter dev portal.",
        "required": true,
        "label": "Consumer Secret",
        "type": "text",
        "name": "consumerSecret"
      },
      {
        "group": "connectionInformation",
        "description": "The Access Token from the Twitter dev portal.",
        "required": true,
        "label": "Access Token",
        "type": "text",
        "name": "accessToken"
      },
      {
        "group": "connectionInformation",
        "description": "The Access Secret from the Twitter dev portal.",
        "required": true,
        "label": "Access Secret",
        "type": "text",
        "name": "accessSecret"
      },
      {
        "group": "searchInformation",
        "description": "Follow multiple users by providing a comma seperated list.",
        "placeholder": "users",
        "required": false,
        "label": "Users to Follow",
        "type": "text",
        "name": "users"
      },
      {
        "group": "searchInformation",
        "description": "Follow multiple topics by providing a comma seperated list.",
        "placeholder": "topics",
        "required": false,
        "label": "Topics to Follow",
        "type": "text",
        "name": "topics"
      },
      {
        "group": "searchInformation",
        "description": "Set this to true if you want to include retweets. This can drastically increase your incoming tweet volume.",
        "type": "boolean",
        "name": "retweets",
        "label": "Include Retweets?"
      },
      {
        "group": "searchInformation",
        "description": "Set this to true if you want to include only tweets from verified accounts.",
        "type": "boolean",
        "name": "verified",
        "label": "Verified Accounts Only?"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 810, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-2\\\"]], \\\"name\\\": \\\"\\\", \\\"safe\\\": \\\"!1\\\", \\\"y\\\": 700, \\\"x\\\": 280, \\\"type\\\": \\\"flat\\\", \\\"id\\\": \\\"{{_id}}-1\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var index = \\\\\\\"{{_index}}\\\\\\\"\\\\n\\\\nvar createdAt = msg.payload['created_at']\\\\nmsg.payload['created_at'] = new Date(Date.parse(createdAt.replace(/( \\\\\\\\+)/, ' UTC$1')));\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_id\\\\\\\": msg.payload[\\\\\\\"id\\\\\\\"],\\\\n    \\\\\\\"_index\\\\\\\": index,\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\"\\\\n    }\\\\n\\\\nvar msg1 = {\\\\n    payload: JSON.stringify({\\\\\\\"index\\\\\\\": operation})\\\\n}\\\\n\\\\nvar msg2 = {\\\\n    payload: JSON.stringify(msg.payload)\\\\n}\\\\n\\\\nreturn [[msg1,msg2]];\\\", \\\"y\\\": 700, \\\"x\\\": 420, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-2\\\"}, {\\\"count\\\": \\\"1000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 700, \\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": \\\"!1\\\", \\\"x\\\": 560, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-3\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-5\\\"]], \\\"name\\\": \\\"Add Trailing New Line\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var payloadIn = msg.payload;\\\\npayloadIn += \\\\\\\"\\\\\\\\n\\\\\\\";\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch'\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/_bulk',\\\\n    method: 'POST',\\\\n    payload: payloadIn\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 700, \\\"x\\\": 750, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-5\\\", \\\"y\\\": 700, \\\"x\\\": 960, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"extend\\\": \\\"!0\\\", \\\"reset\\\": \\\"\\\", \\\"units\\\": \\\"s\\\", \\\"op1\\\": \\\"\\\", \\\"op2\\\": \\\"true\\\", \\\"y\\\": 740, \\\"op1type\\\": \\\"nul\\\", \\\"wires\\\": [[\\\"{{_id}}-7\\\"]], \\\"duration\\\": \\\"2\\\", \\\"x\\\": 270, \\\"op2type\\\": \\\"bool\\\", \\\"type\\\": \\\"trigger\\\", \\\"id\\\": \\\"{{_id}}-6\\\", \\\"name\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"delete msg.payload\\\\nmsg.complete = true\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 740, \\\"x\\\": 440, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-7\\\"}, {\\\"loadImages\\\": false, \\\"wires\\\": [[\\\"{{_id}}-1\\\", \\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"\\\", \\\"topicLanguage\\\": \\\"en\\\", \\\"topics\\\": \\\"{{topics}}\\\", \\\"onlyVerified\\\": {{verified}}, \\\"tweetLimit\\\": \\\"0\\\", \\\"topicRetweets\\\": {{retweets}}, \\\"y\\\": 700, \\\"connection\\\": \\\"{{_id}}-9\\\", \\\"x\\\": 120, \\\"debug\\\": false, \\\"follow\\\": \\\"{{users}}\\\", \\\"type\\\": \\\"Twitter Stream\\\", \\\"id\\\": \\\"{{_id}}-8\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-10\\\"}, {\\\"accessToken\\\": \\\"{{accessToken}}\\\", \\\"consumerKey\\\": \\\"{{consumerKey}}\\\", \\\"accessSecret\\\": \\\"{{accessSecret}}\\\", \\\"type\\\": \\\"twitter-api-connection\\\", \\\"id\\\": \\\"{{_id}}-9\\\", \\\"consumerSecret\\\": \\\"{{consumerSecret}}\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Provide the details below, which come from your Twitter development account. Go to https://apps.twitter.com to manage yours.",
        "key": "connectionInformation",
        "title": "Twitter Development Credentials"
      },
      {
        "description": "Provide a comma delimited list of users or topics to follow. You must provide at least one user or topic. ",
        "key": "searchInformation",
        "title": "Twitter Search Information"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "6_MsHGMBvIUPJ7a7w4TF"
  },
  {
    "deprecated": false,
    "name": "Github Repo Statistics",
    "description": "Use this source to pull statistics from a Github repository like stars, views, etc. Provide the owner, repo name, and a personal access token.",
    "parameters": [
      {
        "group": "repoInformation",
        "description": "Generate a Personal access token and enter it here.",
        "required": true,
        "label": "Personal Access Token",
        "type": "text",
        "name": "token"
      },
      {
        "group": "repoInformation",
        "description": "Enter the owner of the repository. Enter either a user or organizaation.",
        "required": true,
        "label": "Owner",
        "type": "text",
        "name": "owner"
      },
      {
        "group": "repoInformation",
        "description": "Enter the repository name.",
        "required": true,
        "label": "Repository",
        "type": "text",
        "name": "repo"
      },
      {
        "description": "The page of starred users that we've made it up to.",
        "required": false,
        "type": "number",
        "name": "stargazerPage",
        "label": "Current Stars Page"
      },
      {
        "description": "The page of Subscribed users that we've made it up to.",
        "required": false,
        "type": "number",
        "name": "subscriberPage",
        "label": "Current Subscriber Page"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-68\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, JSON.parse(param.value))\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 730, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-1\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-5\\\", \\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-68\\\"], \\\"y\\\": 700, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-2\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-3\\\", \\\"y\\\": 800, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var page = flow.get('stargazerPage') || 1;\\\\nvar owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"Accept\\\\\\\": \\\\\\\"application/vnd.github.v3.star+json\\\\\\\",\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/stargazers?per_page=100&page=' + page\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 800, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"\\\", \\\"schedule\\\": \\\"every 1 hour\\\", \\\"y\\\": 720, \\\"x\\\": 170, \\\"type\\\": \\\"later\\\", \\\"id\\\": \\\"{{_id}}-5\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Timer Out\\\", \\\"links\\\": [\\\"{{_id}}-7\\\", \\\"{{_id}}-12\\\", \\\"{{_id}}-34\\\", \\\"{{_id}}-43\\\", \\\"{{_id}}-52\\\", \\\"{{_id}}-61\\\"], \\\"y\\\": 700, \\\"x\\\": 275, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 840, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-7\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-8\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"y\\\": 800, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Update Stars\\\", \\\"y\\\": 760, \\\"x\\\": 130, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-9\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-10\\\", \\\"y\\\": 920, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-10\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var page = flow.get('subscriberPage') || 1;\\\\nvar owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"Accept\\\\\\\": \\\\\\\"application/vnd.github.v3.star+json\\\\\\\",\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\n\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/subscribers?per_page=100&page=' + page\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 920, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 960, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-12\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-13\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"y\\\": 920, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Update Watchers\\\", \\\"y\\\": 880, \\\"x\\\": 140, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-14\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-17\\\"], [\\\"{{_id}}-16\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    if (msg.payload.length == 100) {\\\\n        if (!flow.get('stargazerPage')) {\\\\n            flow.set('stargazerPage', 2)\\\\n        } else {\\\\n            flow.set('stargazerPage', Number(flow.get('stargazerPage')) + 1)\\\\n        }\\\\n        \\\\n        return [msg, {}]\\\\n    } else {\\\\n        return [msg, null]\\\\n    }\\\\n}\\\", \\\"y\\\": 800, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 840, \\\"x\\\": 400, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-16\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-18\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 800, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-17\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-22\\\"]], \\\"name\\\": \\\"\\\", \\\"y\\\": 800, \\\"x\\\": 790, \\\"type\\\": \\\"flat\\\", \\\"id\\\": \\\"{{_id}}-18\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"false\\\", \\\"y\\\": 1520, \\\"active\\\": true, \\\"x\\\": 910, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-19\\\", \\\"name\\\": \\\"\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 800, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-23\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-20\\\", \\\"{{_id}}-30\\\", \\\"{{_id}}-40\\\", \\\"{{_id}}-49\\\", \\\"{{_id}}-58\\\", \\\"{{_id}}-67\\\"], \\\"y\\\": 1520, \\\"x\\\": 395, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-21\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-20\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\ndata.date = data.starred_at\\\\ndelete data.starred_at\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data['user.id']\\\\n}\\\\n\\\\ndata.metric = 'stars'\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 800, \\\"x\\\": 910, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-22\\\"}, {\\\"count\\\": \\\"1000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 1520, \\\"wires\\\": [[\\\"{{_id}}-24\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": false, \\\"x\\\": 490, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-23\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-25\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload += \\\\\\\"\\\\\\\\n\\\\\\\"\\\\n\\\\nvar insertData = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST'\\\\n\\\\nmsg.payload = {\\\\n    path: '/_bulk',\\\\n    method: 'POST',\\\\n    payload: insertData\\\\n}\\\\n\\\\n\\\\ndelete msg.headers\\\\nreturn msg;\\\", \\\"y\\\": 1520, \\\"x\\\": 610, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-24\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-25\\\", \\\"y\\\": 1520, \\\"x\\\": 750, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-27\\\"], [\\\"{{_id}}-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    if (msg.payload.length == 100) {\\\\n        if (!flow.get('subscriberPage')) {\\\\n            flow.set('subscriberPage', 2)\\\\n        } else {\\\\n            flow.set('subscriberPage', Number(flow.get('subscriberPage')) + 1)\\\\n        }\\\\n        \\\\n        return [msg, {}]\\\\n    } else {\\\\n        return [msg, null]\\\\n    }\\\\n}\\\", \\\"y\\\": 920, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-26\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-28\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 920, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-27\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-29\\\"]], \\\"name\\\": \\\"\\\", \\\"y\\\": 920, \\\"x\\\": 790, \\\"type\\\": \\\"flat\\\", \\\"id\\\": \\\"{{_id}}-28\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-30\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data.id\\\\n}\\\\n\\\\ndata.metric = 'subscribers'\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 920, \\\"x\\\": 910, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-29\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 920, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-30\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 960, \\\"x\\\": 400, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-31\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-32\\\", \\\"y\\\": 1040, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-32\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\n\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/traffic/popular/referrers'\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 1040, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-33\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 1080, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-34\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-35\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-33\\\"]], \\\"y\\\": 1040, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Referrers\\\", \\\"y\\\": 1000, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-36\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    return msg\\\\n}\\\", \\\"y\\\": 1040, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-37\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-39\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 1040, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-38\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-40\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\n\\\\ndata.metric = 'referrers'\\\\ndata.rank = msg.parts.index + 1\\\\n\\\\nvar nowDate = new Date();\\\\ndata.date = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate());\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data.date + '-' + data.rank + '-' + data.metric\\\\n}\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 1040, \\\"x\\\": 790, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-39\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 1040, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-40\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-46\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-41\\\", \\\"y\\\": 1160, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-41\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\n\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/traffic/popular/paths'\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 1160, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-42\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-42\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 1200, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-43\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-44\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-42\\\"]], \\\"y\\\": 1160, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Paths\\\", \\\"y\\\": 1120, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-45\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-47\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    return msg\\\\n}\\\", \\\"y\\\": 1160, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-46\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-48\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 1160, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-47\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-49\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\n\\\\ndata.metric = 'paths'\\\\ndata.rank = msg.parts.index + 1\\\\n\\\\nvar nowDate = new Date();\\\\ndata.date = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate());\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data.date + '-' + data.rank + '-' + data.metric\\\\n}\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 1160, \\\"x\\\": 790, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-48\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 1160, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-49\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-55\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-50\\\", \\\"y\\\": 1280, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-50\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\n\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/traffic/views'\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 1280, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-51\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-51\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 1320, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-52\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-53\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-51\\\"]], \\\"y\\\": 1280, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Views\\\", \\\"y\\\": 1240, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-54\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-56\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    msg.payload = msg.payload.views\\\\n    return msg\\\\n}\\\", \\\"y\\\": 1280, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-55\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-57\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 1280, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-56\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-58\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\n\\\\ndata.metric = 'views'\\\\ndata.rank = msg.parts.index + 1\\\\n\\\\ndata.date = data.timestamp\\\\ndelete data.timestamp\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data.date + '-' + data.metric\\\\n}\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 1280, \\\"x\\\": 790, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-57\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 1280, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-58\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-64\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-59\\\", \\\"y\\\": 1400, \\\"x\\\": 410, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-59\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var owner = flow.get('owner');\\\\nvar repo = flow.get('repo');\\\\n\\\\nhash = \\\\\\\"token \\\\\\\" + flow.get('token');\\\\n  \\\\nmsg.headers = {\\\\n    \\\\\\\"User-Agent\\\\\\\": \\\\\\\"Conveyor\\\\\\\",\\\\n    \\\\\\\"Authorization\\\\\\\": hash\\\\n}\\\\n\\\\nmsg.url = 'https://api.github.com/repos/' + owner + '/' + repo + '/traffic/clones'\\\\nmsg.method = 'GET'\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 1400, \\\"x\\\": 270, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-60\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-60\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 1440, \\\"x\\\": 155, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-61\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-62\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-60\\\"]], \\\"y\\\": 1400, \\\"x\\\": 120, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": false}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Clones\\\", \\\"y\\\": 1360, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-63\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-65\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n    msg.payload = msg.payload.views\\\\n    return msg\\\\n}\\\", \\\"y\\\": 1400, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-64\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-66\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 1400, \\\"x\\\": 670, \\\"arraySplt\\\": 1, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-65\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-67\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = msg.payload\\\\n\\\\ndata.metric = 'clones'\\\\ndata.rank = msg.parts.index + 1\\\\n\\\\ndata.date = data.timestamp\\\\ndelete data.timestamp\\\\n\\\\nvar operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\",\\\\n    \\\\\\\"_id\\\\\\\": data.date + '-' + data.metric\\\\n}\\\\n\\\\nvar newMsg1 = {};\\\\nnewMsg1.payload = JSON.stringify({index: operation})\\\\nmsg.payload = JSON.stringify(data)\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg.complete = true\\\\n}\\\\n\\\\nreturn [[newMsg1,msg]];\\\", \\\"y\\\": 1400, \\\"x\\\": 790, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-66\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Send To ES\\\", \\\"links\\\": [\\\"{{_id}}-21\\\"], \\\"y\\\": 1400, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-67\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Init Out\\\", \\\"links\\\": [\\\"b9f24f0a.fdec7\\\"], \\\"y\\\": 80, \\\"x\\\": 835, \\\"z\\\": \\\"8f29930b.1f793\\\", \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-68\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Provide the repository name and owner. Please note that the repository must either be public or you must have access to it in order to pull all data.",
        "key": "repoInformation",
        "title": "Repository Information"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "7vMsHGMBvIUPJ7a7zoRv"
  },
  {
    "deprecated": false,
    "name": "Push API",
    "description": "This source exposes an easy to use API endpoint from which you can POST and PUT data into Elasticsearch with no special query syntax.",
    "parameters": [],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 810, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 810, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "9_MtHGMBvIUPJ7a7GYRP"
  },
  {
    "deprecated": false,
    "name": "SQL Server",
    "description": "With this flow you can populate an ES index with SQL Server data. Truncate/Reload and Incremental Updates are supported.",
    "parameters": [
      {
        "group": "connectionInformation",
        "description": "Server",
        "required": true,
        "label": "Server",
        "type": "text",
        "name": "server"
      },
      {
        "group": "connectionInformation",
        "description": "Database",
        "type": "text",
        "name": "database",
        "label": "Database"
      },
      {
        "group": "connectionCredential",
        "required": true,
        "type": "text",
        "name": "userName",
        "label": "Username"
      },
      {
        "group": "connectionCredential",
        "description": "Password",
        "required": true,
        "label": "Password",
        "type": "password",
        "name": "password"
      },
      {
        "group": "connectionCredential",
        "description": "To use with Windows Authentication specify the domain here. Leave blank to login as a database user.",
        "type": "text",
        "name": "domain",
        "label": "Domain"
      },
      {
        "group": "connectionCredential",
        "description": "Set this to true if you need to encrypt the connection, this is usually required for Azure.",
        "type": "boolean",
        "name": "encrypt",
        "label": "Encrypt the Connection?"
      },
      {
        "group": "queryDetails",
        "description": "Specify the frequency of update in fairly natural language. Here are some examples<ul><li>\"every 15 minutes\"</li><li>\"on the last day of the month\"</li><li>\"at 5:00pm from Monday trought Friday\"</li></ul><br\\>For more examples click <a>here</a>.",
        "placeholder": "ex: Every 5 minutes",
        "required": true,
        "label": "Update Frequency",
        "type": "text",
        "name": "updateFrequency"
      },
      {
        "group": "queryDetails",
        "description": "Setting this to true will clear out existing data before loading new data. In otherwords this will 'Truncate' the data. Setting this to false allows incremental loading.",
        "type": "boolean",
        "name": "truncate",
        "label": "Overwrite"
      },
      {
        "group": "queryDetails",
        "description": "Specifying a unique field with overwrite turned off allows for incremental loading of data. The unique field will prevent duplicates and allow updates. This also exposes the parameter latestUniqueField to the query. Use it to start the query at the right spot.",
        "required": false,
        "label": "Unique Field",
        "type": "text",
        "name": "uniqueField"
      },
      {
        "group": "queryDetails",
        "description": "Let's say that my unique field above is an autoincremented ID. I could use this field to start extracting data at an arbitrary ID rather than 0.",
        "required": false,
        "value": "0",
        "label": "Unique Field Starting Position",
        "type": "text",
        "name": "uniqueFieldStart"
      },
      {
        "group": "queryDetails",
        "description": "Query",
        "placeholder": "Query",
        "required": true,
        "label": "Query",
        "type": "code",
        "name": "query"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-33\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 730, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 180, \\\"x\\\": 870, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update',\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 170, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\", \\\"{{_id}}-33\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 520, \\\"x\\\": 870, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-26\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 160, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default',\\\\n    method: 'POST',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 160, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 600, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-26\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-4\\\"]], \\\"name\\\": \\\"\\\", \\\"schedule\\\": \\\"\\\", \\\"y\\\": 700, \\\"x\\\": 310, \\\"type\\\": \\\"later\\\", \\\"id\\\": \\\"{{_id}}-3\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"true\\\", \\\"y\\\": 660, \\\"active\\\": true, \\\"x\\\": 1070, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-5\\\", \\\"name\\\": \\\"These Are Errors!\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-7\\\"]], \\\"name\\\": \\\"Query\\\", \\\"format\\\": \\\"handlebars\\\", \\\"syntax\\\": \\\"mustache\\\", \\\"field\\\": \\\"payload\\\", \\\"fieldType\\\": \\\"msg\\\", \\\"template\\\": \\\"{{{query}}}\\\", \\\"x\\\": 190, \\\"y\\\": 900, \\\"output\\\": \\\"str\\\", \\\"type\\\": \\\"template\\\", \\\"id\\\": \\\"{{_id}}-6\\\"}, {\\\"outField\\\": \\\"payload\\\", \\\"wires\\\": [[\\\"{{_id}}-9\\\"]], \\\"name\\\": \\\"\\\", \\\"mssqlCN\\\": \\\"{{_id}}-8\\\", \\\"x\\\": 310, \\\"y\\\": 900, \\\"query\\\": \\\"\\\", \\\"type\\\": \\\"MSSQL\\\", \\\"id\\\": \\\"{{_id}}-7\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-29\\\"], [\\\"{{_id}}-10\\\"]], \\\"name\\\": \\\"Verify Later Parse\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.later) {\\\\n    return [null, msg]\\\\n} else {\\\\n    return [msg, null];\\\\n}\\\", \\\"y\\\": 700, \\\"x\\\": 470, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-12\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"var operation = {\\\\n    \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n    \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\"\\\\n    }\\\\n    \\\\nvar uniqueField = flow.get('uniqueField')\\\\n\\\\nif (uniqueField && uniqueField !== '' && msg.payload[uniqueField]) {\\\\n    operation['_id'] = msg.payload[uniqueField]\\\\n    \\\\n    if (msg.parts.index == msg.parts.count - 1) {\\\\n        flow.set('latestUniqueField', msg.payload[uniqueField])\\\\n    }\\\\n}\\\\n\\\\nvar msg1 = {\\\\n    payload: JSON.stringify({index: operation})\\\\n}\\\\n\\\\nvar msg2 = {\\\\n    payload: JSON.stringify(msg.payload)\\\\n}\\\\n\\\\nif (msg.parts.index == (msg.parts.count - 1)) {\\\\n    msg2.complete = true\\\\n}\\\\n\\\\nreturn [[msg1,msg2]];\\\", \\\"y\\\": 900, \\\"x\\\": 550, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"name\\\": \\\"\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 900, \\\"x\\\": 430, \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-9\\\"}, {\\\"count\\\": \\\"1000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 900, \\\"wires\\\": [[\\\"{{_id}}-13\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": false, \\\"x\\\": 670, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-12\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-14\\\", \\\"y\\\": 900, \\\"x\\\": 930, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-14\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var bulkInsert = msg.payload;\\\\nbulkInsert += \\\\\\\"\\\\\\\\n\\\\\\\";\\\\n\\\\nmsg = {\\\\n    url: global.get('node-red').url + '/elasticsearch',\\\\n    method: 'POST',\\\\n    payload: {\\\\n        path: '/_bulk',\\\\n        method: 'POST',\\\\n        payload: bulkInsert\\\\n    }\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 900, \\\"x\\\": 790, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-13\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Truncate\\\", \\\"links\\\": [\\\"{{_id}}-17\\\"], \\\"y\\\": 740, \\\"x\\\": 855, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-16\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-18\\\"]], \\\"name\\\": \\\"Truncate In\\\", \\\"links\\\": [\\\"{{_id}}-16\\\"], \\\"y\\\": 800, \\\"x\\\": 95, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-17\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Truncate Existing Data\\\", \\\"y\\\": 760, \\\"x\\\": 160, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-19\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-21\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-20\\\", \\\"y\\\": 800, \\\"x\\\": 610, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Query\\\", \\\"links\\\": [\\\"{{_id}}-23\\\"], \\\"y\\\": 840, \\\"x\\\": 855, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-6\\\"]], \\\"name\\\": \\\"Query In\\\", \\\"links\\\": [\\\"{{_id}}-22\\\", \\\"{{_id}}-28\\\"], \\\"y\\\": 900, \\\"x\\\": 95, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-23\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Query New Data\\\", \\\"y\\\": 860, \\\"x\\\": 140, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-24\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-31\\\"], [\\\"{{_id}}-22\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode && msg.statusCode == 200) {\\\\n    return [null, msg]\\\\n} else {\\\\n    return [msg, null]\\\\n}\\\", \\\"y\\\": 800, \\\"x\\\": 750, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-21\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-20\\\"], [\\\"{{_id}}-22\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode == 200) {\\\\n\\\\n    msg.payload = {\\\\n        path: '/{{_index}}/_delete_by_query',\\\\n        method: 'POST',\\\\n        payload: {\\\\n            \\\\\\\"query\\\\\\\": {\\\\n                \\\\\\\"match_all\\\\\\\": {}\\\\n            }\\\\n        }\\\\n    }\\\\n\\\\n    return [msg, null]\\\\n} else {\\\\n    return [null, {}]    \\\\n}\\\", \\\"y\\\": 820, \\\"x\\\": 470, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-25\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-26\\\", \\\"y\\\": 800, \\\"x\\\": 330, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-26\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    method: 'POST',\\\\n    url: global.get('node-red').url + '/elasticsearch',\\\\n    payload: {\\\\n        method: 'HEAD',\\\\n        path: '/{{_index}}'\\\\n    }\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 800, \\\"x\\\": 190, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-18\\\"}, {\\\"checkall\\\": \\\"false\\\", \\\"wires\\\": [[\\\"{{_id}}-28\\\"], [\\\"{{_id}}-16\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"str\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"false\\\"}, {\\\"vt\\\": \\\"str\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"true\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"flow\\\", \\\"y\\\": 720, \\\"x\\\": 630, \\\"property\\\": \\\"truncate\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-10\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-27\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Query\\\", \\\"links\\\": [\\\"{{_id}}-23\\\"], \\\"y\\\": 700, \\\"x\\\": 855, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-28\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Error Out\\\", \\\"links\\\": [\\\"{{_id}}-30\\\"], \\\"y\\\": 660, \\\"x\\\": 855, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-29\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-5\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-29\\\", \\\"{{_id}}-31\\\"], \\\"y\\\": 660, \\\"x\\\": 935, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-30\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Error Out\\\", \\\"links\\\": [\\\"{{_id}}-30\\\"], \\\"y\\\": 800, \\\"x\\\": 855, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-31\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-3\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var updateFrequency = JSON.parse(flow.get('updateFrequency'))\\\\n\\\\nmsg.payload = {\\\\n    later: updateFrequency\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 700, \\\"x\\\": 190, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-32\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Start Primary Flow\\\", \\\"links\\\": [\\\"{{_id}}-34\\\"], \\\"y\\\": 80, \\\"x\\\": 835, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-32\\\"]], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"{{_id}}-33\\\"], \\\"y\\\": 700, \\\"x\\\": 95, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-34\\\"}, {\\\"name\\\": \\\"Connection for {{_name}}\\\", \\\"database\\\": \\\"{{database}}\\\", \\\"server\\\": \\\"{{server}}\\\", \\\"encyption\\\": {{encrypt}}, \\\"credentials\\\": {\\\"username\\\": \\\"{{userName}}\\\", \\\"domain\\\": \\\"{{domain}}\\\", \\\"password\\\": \\\"{{password}}\\\"}, \\\"type\\\": \\\"MSSQL-CN\\\", \\\"id\\\": \\\"{{_id}}-8\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Below provide the information required to connect to your server.",
        "key": "connectionInformation",
        "title": "Server Connection Information"
      },
      {
        "description": "Now that we know how to connect to your SQL Server, let's make sure we have the permission to do so.",
        "key": "connectionCredential",
        "title": "Server Connection Credentials"
      },
      {
        "description": "Great, we are connected and down to business. Specify how often you want to update your data and the query you want to use",
        "key": "queryDetails",
        "title": "Query Details"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "-_MtHGMBvIUPJ7a7N4Sg"
  },
  {
    "deprecated": false,
    "name": "Excel File",
    "description": "Use this source to upload Excel files containing data records and store that data in ES.",
    "parameters": [
      {
        "group": "fileInformation",
        "description": "Select the file you would like to upload.",
        "type": "file",
        "name": "file",
        "label": "File to Upload"
      },
      {
        "group": "fileInformation",
        "description": "Select the sheet from the file you would like to upload.",
        "type": "text",
        "name": "sheetName",
        "label": "Choose a Sheet to Import"
      },
      {
        "group": "fileInformation",
        "description": "Managing ES Mappings can be difficult. Use this toggle to force all values to be saved as strings. You can always use the reindex api later to change the mapping types.",
        "type": "boolean",
        "name": "forceStrings",
        "label": "Force all Values to Strings"
      },
      {
        "group": "indexInformation",
        "description": "Set this to true if you would like to delete all of the data for this source before loading new data. Setting this to true allows a 'truncate before load' leaving it false allows incremental loading.",
        "type": "boolean",
        "name": "truncate",
        "label": "Overwrite on Future Uploads"
      },
      {
        "group": "indexInformation",
        "description": "Set a field here to be used for the id of the record. Setting this allows for incremental loading and updating of existing records with the same ID.",
        "type": "text",
        "name": "uniqueField",
        "label": "Unique Field for Incremental Loading and Deduplication"
      }
    ],
    "flow": "\"{\\\"nodes\\\": [{\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Load Configuration on Start-Up\\\", \\\"y\\\": 40, \\\"x\\\": 170, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-1\\\"}, {\\\"repeat\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"crontab\\\": \\\"\\\", \\\"id\\\": \\\"{{_id}}-core-2\\\", \\\"topic\\\": \\\"\\\", \\\"payloadType\\\": \\\"date\\\", \\\"wires\\\": [[\\\"{{_id}}-core-3\\\", \\\"{{_id}}-core-41\\\"]], \\\"y\\\": 80, \\\"x\\\": 130, \\\"type\\\": \\\"inject\\\", \\\"payload\\\": \\\"\\\", \\\"once\\\": true}, {\\\"wires\\\": [[\\\"{{_id}}-core-4\\\"]], \\\"name\\\": \\\"Format\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg = {\\\\n    url: global.get('conveyor-api').url + '/flow/{{_url}}',\\\\n    method: 'GET'\\\\n}\\\\n\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 280, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-3\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-39\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-4\\\", \\\"y\\\": 80, \\\"x\\\": 430, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-41\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var parameters = msg.payload.parameters;\\\\nvar parameterNames = [];\\\\n\\\\nparameters.forEach(function(param) {\\\\n    parameterNames.push(param.key)\\\\n    \\\\n    flow.set(param.key, param.value)\\\\n})\\\\n\\\\nflow.set('params', parameterNames);\\\\n\\\\nmsg.payload = parameters\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 80, \\\"x\\\": 710, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-5\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Configuration Endpoints\\\", \\\"y\\\": 140, \\\"x\\\": 150, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-8\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-7\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 180, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar parameters = {};\\\\n\\\\nparamNames.forEach(function(name) {\\\\n    parameters[name] = flow.get(name);\\\\n})\\\\n\\\\nmsg.payload = parameters\\\\nreturn msg;\\\", \\\"y\\\": 180, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-8\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"headers\\\": {}, \\\"y\\\": 120, \\\"x\\\": 930, \\\"type\\\": \\\"http response\\\", \\\"id\\\": \\\"{{_id}}-core-9\\\", \\\"statusCode\\\": \\\"\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-11\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-10\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 220, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Post is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 220, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-11\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-13\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-12\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 260, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-18\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var paramNames = flow.get('params');\\\\nvar updates = [];\\\\nvar errors = [];\\\\n\\\\nif (msg.payload) {\\\\n    var paramsToUpdate = Object.keys(msg.payload);\\\\n    \\\\n    paramsToUpdate.forEach(function(update) {\\\\n        if (paramNames.includes(update)) {\\\\n            var updateParam = {\\\\n                key: update,\\\\n                value: msg.payload[update]\\\\n            }\\\\n            \\\\n            updates.push(updateParam)\\\\n        } else {\\\\n            errors.push('Parameter [' + update + '] not valid.');\\\\n        }\\\\n    })\\\\n} else {\\\\n    errors.push('No Payload found');\\\\n}\\\\n\\\\nif (errors.length > 0) {\\\\n    msg.payload = errors\\\\n} else {\\\\n    updates.forEach(function(update) {\\\\n        flow.set(update.key, update.value)\\\\n    })\\\\n    \\\\n    var elasticParamsUpdate = [];\\\\n    paramNames.forEach(function(param) {\\\\n        elasticParamsUpdate.push({\\\\n            \\\\\\\"key\\\\\\\": param,\\\\n            \\\\\\\"value\\\\\\\": flow.get(param)\\\\n        })\\\\n    })\\\\n    \\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {};\\\\n    msg.payload.path = '/flow/default/{{_id}}/_update'\\\\n    msg.payload.method = 'POST',\\\\n    msg.payload.payload = {\\\\n        \\\\\\\"doc\\\\\\\" : {\\\\n        \\\\\\\"parameters\\\\\\\" : elasticParamsUpdate\\\\n        }\\\\n    }\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 370, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-13\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-15\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-14\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 300, \\\"x\\\": 130, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Delete is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 300, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-15\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/config\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-16\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 340, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"patch\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = 'Patch is currently not supported. Use PUT to update.'\\\\nreturn msg;\\\", \\\"y\\\": 340, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-19\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-18\\\", \\\"y\\\": 260, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-44\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.statusCode != 200) {\\\\n    msg.payload = 'Local Flow Configuration Updated, but not persisted.',\\\\n    msg.statusCode = 500\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 260, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-19\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Data Endpoints\\\", \\\"y\\\": 400, \\\"x\\\": 120, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-core-20\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-22\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-21\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 440, \\\"x\\\": 150, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-24\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/_search',\\\\n    method: 'GET'\\\\n}\\\\n\\\\nif (msg.req._parsedUrl.search) {\\\\n    msg.payload.path += msg.req._parsedUrl.search\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-22\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-37\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-23\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 560, \\\"x\\\": 130, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"delete\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-25\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-24\\\", \\\"y\\\": 440, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var data = [];\\\\n\\\\nif (msg.payload.hits && msg.payload.hits.hits) {\\\\n    data = msg.payload.hits.hits;    \\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 440, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-25\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-28\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-27\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 480, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"get\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-29\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'GET'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-28\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-core-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-29\\\", \\\"y\\\": 480, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload.found === true && msg.payload._source) {\\\\n    var data = msg.payload._source;\\\\n}\\\\n\\\\nmsg.payload = data\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 480, \\\"x\\\": 650, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-30\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-core-31\\\", \\\"y\\\": 600, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-33\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data\\\", \\\"fields\\\": \\\"[{\\\\\\\"name\\\\\\\": \\\\\\\"file\\\\\\\"}]\\\", \\\"id\\\": \\\"{{_id}}-core-32\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 600, \\\"x\\\": 150, \\\"type\\\": \\\"httpInMultipart\\\", \\\"method\\\": \\\"post\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-31\\\"], [\\\"{{_id}}-45\\\", \\\"{{_id}}-20\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.req.files && msg.req.files.file) {\\\\n    msg.payload = 'Attempting to parse file, see Node-RED logs for status.'\\\\n    \\\\n    return [null, msg]\\\\n} else {\\\\n    var body = msg.payload;\\\\n\\\\n    msg.url = global.get('node-red').url + '/elasticsearch',\\\\n    msg.method = 'POST',\\\\n    msg.payload = {\\\\n        path: '/{{_index}}/default/',\\\\n        method: 'PUT'\\\\n    }\\\\n    \\\\n    if (msg.payload instanceof Array) {\\\\n        var messages = [];\\\\n        \\\\n        msg.payload.forEach(function(data) {\\\\n            msg.payload.payload = data;\\\\n            \\\\n            messages.push(msg)\\\\n        })\\\\n        \\\\n        return [messages, null];\\\\n    } else {\\\\n        msg.payload.payload = body\\\\n        \\\\n        return [msg, null];\\\\n    }\\\\n}\\\", \\\"y\\\": 600, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-33\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-35\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"/{{_url}}/data/:id\\\", \\\"upload\\\": false, \\\"id\\\": \\\"{{_id}}-core-34\\\", \\\"swaggerDoc\\\": \\\"\\\", \\\"y\\\": 520, \\\"x\\\": 140, \\\"type\\\": \\\"http in\\\", \\\"method\\\": \\\"put\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-36\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var body = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'PUT',\\\\n    payload: body\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 520, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-35\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-36\\\", \\\"y\\\": 520, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-38\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch',\\\\nmsg.method = 'POST',\\\\nmsg.payload = {\\\\n    path: '/{{_index}}/default/' + msg.req.params.id,\\\\n    method: 'DELETE'\\\\n}\\\\nreturn msg;\\\", \\\"y\\\": 560, \\\"x\\\": 350, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-core-37\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-43\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-core-38\\\", \\\"y\\\": 560, \\\"x\\\": 510, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"true\\\", \\\"wires\\\": [[\\\"{{_id}}-core-5\\\"], [\\\"{{_id}}-core-40\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"num\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"200\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"msg\\\", \\\"y\\\": 80, \\\"x\\\": 570, \\\"property\\\": \\\"statusCode\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-core-39\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-3\\\"]], \\\"nbRateUnits\\\": \\\"1\\\", \\\"timeout\\\": \\\"5\\\", \\\"randomLast\\\": \\\"5\\\", \\\"drop\\\": false, \\\"name\\\": \\\"\\\", \\\"rate\\\": \\\"1\\\", \\\"randomUnits\\\": \\\"seconds\\\", \\\"timeoutUnits\\\": \\\"seconds\\\", \\\"y\\\": 120, \\\"x\\\": 440, \\\"randomFirst\\\": \\\"1\\\", \\\"type\\\": \\\"delay\\\", \\\"id\\\": \\\"{{_id}}-core-40\\\", \\\"rateUnits\\\": \\\"second\\\", \\\"pauseType\\\": \\\"delay\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"\\\", \\\"links\\\": [\\\"global-42\\\"], \\\"y\\\": 122, \\\"x\\\": 289.5, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-core-41\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-47\\\"]], \\\"name\\\": \\\"\\\", \\\"stream\\\": false, \\\"addname\\\": \\\"\\\", \\\"arraySpltType\\\": \\\"len\\\", \\\"spltType\\\": \\\"str\\\", \\\"splt\\\": \\\"\\\\\\\\n\\\", \\\"y\\\": 880, \\\"x\\\": 290, \\\"arraySplt\\\": \\\"1\\\", \\\"type\\\": \\\"split\\\", \\\"id\\\": \\\"{{_id}}-2\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-core-9\\\", \\\"{{_id}}-41\\\"]], \\\"name\\\": \\\"HTTP Response\\\", \\\"links\\\": [\\\"{{_id}}-35\\\", \\\"{{_id}}-39\\\", \\\"{{_id}}-40\\\", \\\"{{_id}}-42\\\", \\\"{{_id}}-43\\\", \\\"{{_id}}-44\\\", \\\"11194e58.7f22d2\\\"], \\\"y\\\": 120, \\\"x\\\": 835, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-4\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Try to parse file\\\", \\\"y\\\": 840, \\\"x\\\": 140, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-5\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-48\\\"]], \\\"name\\\": \\\"File In\\\", \\\"links\\\": [\\\"{{_id}}-20\\\"], \\\"y\\\": 740, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-6\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-11\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"1\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.payload) {\\\\n    var operation = {\\\\n        \\\\\\\"_index\\\\\\\": \\\\\\\"{{_index}}\\\\\\\",\\\\n        \\\\\\\"_type\\\\\\\": \\\\\\\"default\\\\\\\"\\\\n    }\\\\n    \\\\n    var data = msg.payload\\\\n        \\\\n    var uniqueField = flow.get('uniqueField');\\\\n    var forceStrings = flow.get('forceStrings');\\\\n    \\\\n    \\\\n    for (var k in data) {\\\\n        if (forceStrings) {\\\\n            data[k] = String(data[k])\\\\n        }\\\\n        \\\\n        newK = k.replace(/\\\\\\\\./g,'_')\\\\n        \\\\n        if (newK != k) {\\\\n            data[newK] = data[k]\\\\n            delete data[k]\\\\n        }\\\\n    }\\\\n    \\\\n    if (uniqueField && uniqueField !== '' && msg.payload[uniqueField]) {\\\\n        operation['_id'] = msg.payload[uniqueField]\\\\n    }\\\\n    \\\\n    var newMsg1 = {};\\\\n    newMsg1.payload = JSON.stringify({index: operation})\\\\n    msg.payload = JSON.stringify(data)\\\\n    \\\\n    return [[newMsg1,msg]];\\\\n} else if (msg.control && msg.control.state == 'end') {\\\\n    msg.complete = true;\\\\n    return msg\\\\n}\\\", \\\"y\\\": 980, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-10\\\"}, {\\\"count\\\": \\\"10000\\\", \\\"joiner\\\": \\\"\\\\\\\\n\\\", \\\"name\\\": \\\"\\\", \\\"timeout\\\": \\\"\\\", \\\"joinerType\\\": \\\"str\\\", \\\"y\\\": 980, \\\"wires\\\": [[\\\"{{_id}}-12\\\"]], \\\"build\\\": \\\"string\\\", \\\"key\\\": \\\"topic\\\", \\\"propertyType\\\": \\\"msg\\\", \\\"accumulate\\\": false, \\\"x\\\": 290, \\\"property\\\": \\\"payload\\\", \\\"type\\\": \\\"join\\\", \\\"id\\\": \\\"{{_id}}-11\\\", \\\"mode\\\": \\\"custom\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-13\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload += \\\\\\\"\\\\\\\\n\\\\\\\"\\\\n\\\\nvar insertData = msg.payload;\\\\n\\\\nmsg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST'\\\\n\\\\nmsg.payload = {\\\\n    path: '/_bulk',\\\\n    method: 'POST',\\\\n    payload: insertData\\\\n}\\\\n\\\\n\\\\ndelete msg.headers\\\\nreturn msg;\\\", \\\"y\\\": 980, \\\"x\\\": 410, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-12\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-50\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-13\\\", \\\"y\\\": 980, \\\"x\\\": 550, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Truncate Existing Data\\\", \\\"y\\\": 700, \\\"x\\\": 160, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-14\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-16\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.url = global.get('node-red').url + '/elasticsearch';\\\\nmsg.method = 'POST';\\\\n\\\\nmsg.payload = {\\\\n    path: '/{{_index}}',\\\\n    method: 'HEAD'\\\\n}\\\\n\\\\nreturn msg;\\\", \\\"y\\\": 740, \\\"x\\\": 450, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-15\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-17\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"txt\\\", \\\"id\\\": \\\"{{_id}}-16\\\", \\\"y\\\": 740, \\\"x\\\": 590, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-18\\\"], [\\\"{{_id}}-37\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": \\\"2\\\", \\\"noerr\\\": 0, \\\"func\\\": \\\"delete msg.method;\\\\ndelete msg.headers;\\\\ndelete msg.req;\\\\n\\\\nif (msg.statusCode == 200) {\\\\n    msg.url = global.get('node-red').url + '/elasticsearch'\\\\n    msg.method = 'POST'\\\\n    \\\\n    msg.payload = {\\\\n        path: '/{{_index}}/_delete_by_query',\\\\n        method: 'POST',\\\\n        payload: {\\\\n            \\\\\\\"query\\\\\\\": {\\\\n                \\\\\\\"match_all\\\\\\\": {}\\\\n            }\\\\n        }\\\\n    }\\\\n    \\\\n    return [msg, null];\\\\n} else {\\\\n    // Likely index doesn't exist so we just continue like it's gone.\\\\n    msg.statusCode = 200;\\\\n    \\\\n    return [null, msg]    \\\\n}\\\", \\\"y\\\": 740, \\\"x\\\": 730, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-17\\\"}, {\\\"tls\\\": \\\"\\\", \\\"wires\\\": [[\\\"{{_id}}-30\\\"]], \\\"name\\\": \\\"\\\", \\\"url\\\": \\\"\\\", \\\"ret\\\": \\\"obj\\\", \\\"id\\\": \\\"{{_id}}-18\\\", \\\"y\\\": 740, \\\"x\\\": 890, \\\"type\\\": \\\"http request\\\", \\\"method\\\": \\\"use\\\"}, {\\\"checkall\\\": \\\"false\\\", \\\"wires\\\": [[\\\"{{_id}}-15\\\"], [\\\"{{_id}}-36\\\"]], \\\"name\\\": \\\"\\\", \\\"rules\\\": [{\\\"vt\\\": \\\"str\\\", \\\"t\\\": \\\"eq\\\", \\\"v\\\": \\\"true\\\"}, {\\\"t\\\": \\\"else\\\"}], \\\"outputs\\\": 2, \\\"propertyType\\\": \\\"flow\\\", \\\"y\\\": 740, \\\"x\\\": 310, \\\"property\\\": \\\"truncate\\\", \\\"type\\\": \\\"switch\\\", \\\"id\\\": \\\"{{_id}}-19\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"File Out\\\", \\\"links\\\": [\\\"{{_id}}-6\\\"], \\\"y\\\": 680, \\\"x\\\": 455, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-20\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Switch out\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 740, \\\"x\\\": 995, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-30\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-49\\\"]], \\\"name\\\": \\\"Switch In\\\", \\\"links\\\": [\\\"{{_id}}-30\\\", \\\"{{_id}}-37\\\", \\\"{{_id}}-36\\\"], \\\"y\\\": 880, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-31\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-10\\\"]], \\\"name\\\": \\\"Load Data\\\", \\\"links\\\": [\\\"{{_id}}-33\\\"], \\\"y\\\": 980, \\\"x\\\": 75, \\\"type\\\": \\\"link in\\\", \\\"id\\\": \\\"{{_id}}-32\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Truncated\\\", \\\"links\\\": [\\\"{{_id}}-32\\\"], \\\"y\\\": 880, \\\"x\\\": 695, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-33\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Primary Flow\\\", \\\"y\\\": 660, \\\"x\\\": 110, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-34\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Do Not Truncate\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 780, \\\"x\\\": 415, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-36\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Index Does Not Exist\\\", \\\"links\\\": [\\\"{{_id}}-31\\\"], \\\"y\\\": 780, \\\"x\\\": 835, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-37\\\"}, {\\\"info\\\": \\\"\\\", \\\"wires\\\": [], \\\"name\\\": \\\"Format Data\\\", \\\"y\\\": 940, \\\"x\\\": 130, \\\"type\\\": \\\"comment\\\", \\\"id\\\": \\\"{{_id}}-38\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"true\\\", \\\"y\\\": 80, \\\"active\\\": true, \\\"x\\\": 930, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-41\\\", \\\"name\\\": \\\"\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 520, \\\"x\\\": 815, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-43\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 260, \\\"x\\\": 815, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-44\\\"}, {\\\"wires\\\": [], \\\"name\\\": \\\"Data Operation Output\\\", \\\"links\\\": [\\\"{{_id}}-4\\\"], \\\"y\\\": 640, \\\"x\\\": 455, \\\"type\\\": \\\"link out\\\", \\\"id\\\": \\\"{{_id}}-45\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-51\\\"]], \\\"name\\\": \\\"Configure\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"var newMsg = {}\\\\n\\\\nnewMsg.config = {\\\\n    filename: msg.payload.path,\\\\n    sheets: JSON.parse(flow.get('sheetName'))\\\\n}\\\\nreturn newMsg;\\\", \\\"y\\\": 880, \\\"x\\\": 440, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-47\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-19\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"if (msg.req.files && msg.req.files.file) {\\\\n    msg.files = msg.req.files.file\\\\n    return msg\\\\n} else {\\\\n    node.error('No file found in payload.');\\\\n}\\\", \\\"y\\\": 740, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-48\\\"}, {\\\"wires\\\": [[\\\"{{_id}}-2\\\"]], \\\"name\\\": \\\"\\\", \\\"outputs\\\": 1, \\\"noerr\\\": 0, \\\"func\\\": \\\"msg.payload = msg.files\\\\nreturn msg\\\", \\\"y\\\": 880, \\\"x\\\": 170, \\\"type\\\": \\\"function\\\", \\\"id\\\": \\\"{{_id}}-49\\\"}, {\\\"wires\\\": [], \\\"console\\\": \\\"false\\\", \\\"complete\\\": \\\"false\\\", \\\"y\\\": 980, \\\"active\\\": true, \\\"x\\\": 710, \\\"type\\\": \\\"debug\\\", \\\"id\\\": \\\"{{_id}}-50\\\", \\\"name\\\": \\\"\\\"}, {\\\"direction\\\": true, \\\"wires\\\": [[\\\"{{_id}}-33\\\"], [\\\"{{_id}}-33\\\"]], \\\"sheet\\\": \\\"\\\", \\\"name\\\": \\\"\\\", \\\"filename\\\": \\\"\\\", \\\"headers\\\": false, \\\"y\\\": 880, \\\"x\\\": 580, \\\"type\\\": \\\"bigxlsx\\\", \\\"id\\\": \\\"{{_id}}-51\\\"}], \\\"label\\\": \\\"{{_name}}\\\"}\"",
    "groups": [
      {
        "description": "Upload your file. For now this source does not allow specifying custom delimeters, but it is possible if needed. Also the source expects the file to have the first row as the column titles.",
        "key": "fileInformation",
        "title": "Information about the file"
      },
      {
        "description": "You can use the options below to configure whether the data should be cleared upon further uploads or if the new data should be merged with the old. Merging while using a unique field allows for incremental loading.",
        "key": "indexInformation",
        "title": "Data Storage Options"
      }
    ],
    "hasDashboards": false,
    "hasAlerts": false,
    "hasLearning": false,
    "id": "__MtHGMBvIUPJ7a7S4Tq"
  }
]
